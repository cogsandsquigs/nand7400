[package]
	authors = { workspace = true }
	edition = { workspace = true }
	license = { workspace = true }
	name    = "nand7400-ffi"
	readme  = { workspace = true }
	version = { workspace = true }

	# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
	# The code of the library itself.
	nand7400 = { path = "../nand7400" }

	# Error handling.
	thiserror = "~1"

	# Binding to Swift.
	# MAKE SURE THIS HAS THE SAME VERSION AS THE ONE IN `build-dependencies`!
	uniffi = "~0.24.1"

[build-dependencies]
	# Binding to Swift during buildtime.
	# MAKE SURE THIS HAS THE SAME VERSION AS THE ONE IN `dependencies`!
	uniffi = { version = "~0.24.1", features = ["build"] }

# This is a wrapper feature around `uniffi/cli` made so that `build.rs` doesn't have to link in the CLI
# when it's not needed.
[features]
	cli = ["uniffi/cli"]

# This is the binary that runs the uniffi cli, so that we can generate the C headers, Swift code, etc.
[[bin]]
	name = "uniffi"
	path = "src/bin.rs"

# This is just a library specification. The `staticlib` library type is required for Swift interop, and the
# `cdylib` library type is for everything else.
[lib]
	crate-type = ["cdylib", "staticlib"]
	path       = "src/lib.rs"
